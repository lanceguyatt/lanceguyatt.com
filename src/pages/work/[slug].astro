---
import { getCollection } from 'astro:content'

import { SITE } from '~/config'
import Workbench from '~/layouts/Workbench.astro'
import Window from '~/components/Window.astro'
import { Button } from '~components/ui/button'
import Image from '~/components/Image.astro'
import Work from '~/containers/Work.astro'

export async function getStaticPaths() {
  const work = await getCollection('work')

  return work.map(entry => ({
    params: { slug: entry.slug },
    props: { entry }
  }))
}

const { entry } = Astro.props
const { data, slug } = entry
const { name, description, image, tags, url, sameAs } = data

const { Content } = await entry.render()

const title = `${name} - Work - ${SITE.name}`
// const url = `work/${slug}`
const keywords = tags.map(tag => tag)

const meta = { title, name, description, url, image }

const schema = {
  '@context': 'https://schema.org',
  '@type': 'WebPage',
  name,
  description,
  url: `${SITE.url}/work/${slug}`,
  image: {
    '@type': 'ImageObject',
    url: `${SITE.url}${image.url}`,
    width: image.width,
    height: image.height,
    description: image.alt
  },
  breadcrumb: {
    '@type': 'BreadcrumbList',
    itemListElement: [
      {
        '@type': 'ListItem',
        position: 1,
        item: {
          '@id': `${SITE.url}`,
          name: 'Workbench'
        }
      },
      {
        '@type': 'ListItem',
        position: 2,
        item: {
          '@id': `${SITE.url}/work`,
          name: 'Work'
        }
      },
      {
        '@type': 'ListItem',
        position: 3,
        item: {
          '@id': `${SITE.url}/work/${slug}`,
          name
        }
      }
    ]
  },
  mainEntity: {
    '@type': 'CreativeWork',
    name,
    url: `${SITE.url}/work/${slug}`,
    sameAs,
    image: {
      '@type': 'ImageObject',
      url: `${SITE.url}${image.url}`,
      width: image.width,
      height: image.height,
      description: image.alt
    },
    keywords,
    copyrightHolder: {
      '@type': 'Organization',
      name
    }
  },
  copyrightHolder: {
    '@type': 'Person',
    name: 'Lance Guyatt'
  },
  copyrightYear: SITE.copyrightYear
}
---

<Workbench {...meta}>
  <script
    type="application/ld+json"
    set:html={JSON.stringify(schema, null, 2)}
  />
  <Window id={`window-${slug}`} name={name} url="/work" active intent="modal2">
    <div class="flex flex-col justify-center gap-6">
      {
        image && (
          <div class="h-36 w-36 self-center">
            <div class="aspect-square">
              <Image src={image.url} alt={image.alt} />
            </div>
          </div>
        )
      }
      <dl class="grid max-w-160 gap-3 sm:grid-cols-[1fr_11fr]">
        <dt
          class="flex items-center text-foreground after:content-[':'] sm:justify-end"
        >
          Name
        </dt>
        <dd class="border-img-foo p-2px">{name}</dd>
        {
          url && (
            <>
              <dt class="flex items-center text-foreground after:content-[':'] sm:justify-end">
                Url
              </dt>
              <dd class="border-img-foo p-2px">{url}</dd>
            </>
          )
        }
        <dt
          class="flex items-center text-foreground after:content-[':'] sm:justify-end"
        >
          Technologies
        </dt>
        <dd class="border-img-foo p-2px">
          <ul>
            {tags.map(tag => <li>{tag}</li>)}
          </ul>
        </dd>
      </dl>
      {
        Content && (
          <div class="mx-auto grid max-w-[40rem] grid-cols-[1fr_11fr] gap-3">
            <div />
            <div class="prose-black">
              <Content />
            </div>
          </div>
        )
      }
      <div class="flex justify-between">
        <Button>
          <a href="/work">Cancel</a>
        </Button>
        <Button href={url} target="_blank">Launch</Button>
      </div>
    </div>
  </Window>
  <Window id="work" name="Work" intent="modal">
    <Work />
  </Window>
</Workbench>
